@page "/changepassword"

@attribute [Authorize]
@using BlazorEmployeeManagementApp2.Shared.AuthModels;
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>Change Password</h1>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter password details</h5>
        <EditForm Model="ChangePasswordModel" OnValidSubmit="HandleChangePassword">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="oldpassword">Old Password</label>
                <InputText Id="oldpassword" type="password" class="form-control" @bind-Value="ChangePasswordModel.OldPassword" />
                <ValidationMessage For="@(() => ChangePasswordModel.Password)" />
            </div>
            <div class="form-group">
                <label for="newpassword">New Password</label>
                <InputText Id="newpassword" type="password" class="form-control" @bind-Value="ChangePasswordModel.Password" />
                <ValidationMessage For="@(() => ChangePasswordModel.Password)" />
            </div>
            <div class="form-group">
                <label for="newconfirmpassword">New Confirm Password</label>
                <InputText Id="newconfirmpassword" type="password" class="form-control" @bind-Value="ChangePasswordModel.ConfirmPassword" />
                <ValidationMessage For="@(() => ChangePasswordModel.ConfirmPassword)" />
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Submit</button>
            @if (Loading)
            {
                <b><i>Please Wait...</i></b>
            }
        </EditForm>
    </div>
</div>
@code {
    private ChangePasswordModel ChangePasswordModel = new ChangePasswordModel();
    private bool ShowErrors;
    private IEnumerable<string> Errors;
    private bool Loading = false;

    private async Task HandleChangePassword()
    {
        ShowErrors = false;
        Loading = true;

        var result = await AuthService.ChangePassword(ChangePasswordModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/userinfo");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
            Loading = false;
        }
    }
}
