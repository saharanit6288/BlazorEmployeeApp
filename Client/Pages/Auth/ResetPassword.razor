@page "/resetpassword"

@using BlazorEmployeeManagementApp2.Shared.AuthModels;
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>Reset Password</h1>

@if (ShowErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter reset password details</h5>
        <EditForm Model="ResetPasswordModel" OnValidSubmit="HandleResetPassword">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Email-Id</label>
                <InputText Id="email" class="form-control" @bind-Value="ResetPasswordModel.Email" />
                <ValidationMessage For="@(() => ResetPasswordModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">New Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="ResetPasswordModel.Password" />
                <ValidationMessage For="@(() => ResetPasswordModel.Password)" />
            </div>
            <div class="form-group">
                <label for="password">New Confirm Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="ResetPasswordModel.ConfirmPassword" />
                <ValidationMessage For="@(() => ResetPasswordModel.ConfirmPassword)" />
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Submit</button>
            @if (Loading)
            {
                <b><i>Please Wait...</i></b>
            }
        </EditForm>
    </div>
</div>

@code {
    private ResetPasswordModel ResetPasswordModel = new ResetPasswordModel();
    private bool ShowErrors;
    private IEnumerable<string> Errors;
    private bool Loading = false;

    private async Task HandleResetPassword()
    {
        ShowErrors = false;
        Loading = true;

        var result = await AuthService.ResetPassword(ResetPasswordModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            Errors = result.Errors;
            ShowErrors = true;
            Loading = false;
        }
    }
}
